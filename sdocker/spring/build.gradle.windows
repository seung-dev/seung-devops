plugins {
	id "java"
	id "org.springframework.boot" version "3.3.0"
	id "io.spring.dependency-management" version "1.1.5"
}

def ver = project.hasProperty("ver") ? project.property("ver").toString() : "1.0.0"

group = "seung"
version = "${ver}"

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

repositories {
	mavenCentral()
	maven { url "https://jitpack.io" }
}

configurations {
	all {
		// Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
		exclude module: "commons-logging"
	}
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {

	// spring
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("org.springframework.boot:spring-boot-starter-validation")
	implementation("org.springframework.boot:spring-boot-starter-security")
	//implementation("org.springframework.boot:spring-boot-starter-aop")
	implementation("org.springframework.boot:spring-boot-starter-actuator")
	//implementation("org.springframework.boot:spring-boot-starter-oauth2-client")
	//implementation("org.springframework.boot:spring-boot-starter-mail")
	//implementation("org.springframework.boot:spring-boot-starter-quartz")
	//implementation("org.springframework.boot:spring-boot-starter-amqp")
	compileOnly("org.springframework.boot:spring-boot-devtools")
	
	// lombok
	implementation("org.projectlombok:lombok:1.18.30")
	annotationProcessor("org.projectlombok:lombok:1.18.30")
	
	// database
	implementation("org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3")
	//implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	runtimeOnly("org.postgresql:postgresql")
	//runtimeOnly("com.microsoft.sqlserver:mssql-jdbc")
	//runtimeOnly("com.oracle.ojdbc:ojdbc8")
	//runtimeOnly("com.mysql:mysql-connector-j")
	
	// jwt
	implementation("io.jsonwebtoken:jjwt-api:0.12.5")
	runtimeOnly("io.jsonwebtoken:jjwt-impl:0.12.5")
	runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.12.5")
	
	// lib
	implementation fileTree(dir: "libs", include: "*.jar")
	
	// seung
	implementation(project(path: ":seung-kimchi", configuration: "default")) {
		exclude module: "slf4j-simple"
	}
	
	// test
	testImplementation("org.springframework.boot:spring-boot-starter-test")
	testImplementation("org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.2")
	testImplementation("org.springframework.security:spring-security-test")
	
}

test {
	useJUnitPlatform()
}

springBoot {
	buildInfo()
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

tasks.withType(Test) {
	defaultCharacterEncoding = "UTF-8"
}

tasks.withType(Javadoc) {
	options.encoding = "UTF-8"
}

/*
tasks.withType(Jar) {
	archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
	archiveFileName = "${archiveBaseName.get()}-${archiveVersion.get()}.${archiveExtension.get()}"
}
*/

jar {
	enabled = false// plain jar
}
